@use 'sass:math';
@use '../mixins' as m;

$icon-w: 16px;
$pad-tb: 12px;
$pad-lr: 16px;
$text-h: 20px;

//通知弹窗
.b3-snackbars {
  // 提示信息
  .b3-snackbar {
    &__content {
      height: auto;
      position: relative;
      color: var(--rc-on-surface-rgb);
      box-shadow: var(--rc-elevation-2);
      background-color: var(--rc-surface);
      padding: $pad-tb $pad-lr;
      padding-left: $pad-lr + $icon-w + 12px;

      // 提示种类图标
      &::before {
        content: '';
        display: block;
        position: absolute;
        left: $pad-lr;
        top: math.div($pad-tb * 2 + $text-h - $icon-w, 2);
        width: $icon-w;
        height: $icon-w;
        @include m.add-icon(var(--rc-on-tertiary-container), 'info', 24, 'round');
      }

      a {
        color: var(--rc-primary);
        white-space: normal;
      }

      .fn__space {
        width: 8px;
      }
    }

    // 提示关闭按钮
    &__close {
      display: none;
    }
    $feat-colors: (
      'info': 'secondary',
      'success': 'tertiary',
      'error': 'error',
      'warning': 'warning',
    );
    @each $feat, $type in $feat-colors {
      &--#{$feat} {
        .b3-snackbar__content::before {
          $type-color: var(--rc-#{$type});
          @include m.add-icon($type-color, $feat, 24, 'round');
        }
      }
    }
    // 提示内按钮
    .b3-button {
      @include m.state(var(--rc-on-surface-rgb));
    }
  }

  // 全部已读按钮
  > .b3-button {
    color: var(--rc-on-primary);
    background-color: var(--rc-primary);
    box-shadow: var(--rc-elevation-2);

    svg,
    &::before {
      display: none;
    }

    &::after {
      @include m.reset-style();
      position: unset;
      display: block;
      content: attr(aria-label);
    }
  }
}
