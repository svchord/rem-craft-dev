@use 'dock';
@use 'empty';
@use 'status';
@use 'resize';
@use 'scroller';
@use 'tab';
@use 'top-bar';

body:not(.body--window) #layouts {
  background-color: var(--rc-base);
  > .fn__flex:first-child {
    border-radius: var(--b3-border-radius-b);
    margin: 0 dock.$interval dock.$interval;
  }
}

body.body--window {
  background-color: var(--rc-base);
  #layouts {
    margin-bottom: dock.$interval;
  }
  .layout-tab-bar--readonly[style*='padding-right'] {
    padding-right: 184px !important;
  }
}

body {
  font-size: 13px;
  &:not(.body--window) {
    &::before {
      content: ' ';
      border-radius: var(--b3-border-radius-b);
      background-color: transparent;
      box-shadow: var(--rc-card-shadow);
      position: absolute;
      top: top-bar.$height;
      left: dock.$width;
      right: dock.$width;
      bottom: status.$height;
    }
    &:has(#dockLeft.fn__none) ::before {
      left: dock.$interval;
    }
    &:has(#dockRight.fn__none)::before {
      right: dock.$interval;
    }
    &:has(#status.fn__none)::before {
      bottom: dock.$interval;
    }
  }
}

.layout__dockl,
.layout__dockr,
.layout__dockb {
  background: var(--rc-surface);
  transition: var(--b3-transition);
  top: top-bar.$height;
  bottom: status.$height;
  border: transparent;

  .layout-tab-container {
    background-color: transparent;
  }

  &.layout--float {
    box-shadow: var(--rc-elevation-2);
    border: {
      width: 1px;
      radius: var(--b3-border-radius-b);
    }

    > .layout__dockresize {
      &:hover {
        border-color: var(--rc-primary);
      }
      &--lr {
        border-width: 0 2px;
      }
      &:not(.layout__dockresize--lr) {
        border-width: 2px 0;
      }
    }
  }
}

.layout__dockl {
  border-top-left-radius: var(--b3-border-radius-b);
  border-bottom-left-radius: var(--b3-border-radius-b);
}

.layout__dockr {
  border-top-right-radius: var(--b3-border-radius-b);
  border-bottom-right-radius: var(--b3-border-radius-b);
}

@mixin float($direction) {
  .layout__dock#{if($direction=='left','l','r')} {
    $width: dock.$width;
    #{$direction}: $width !important;
    &.layout--float {
      #{$direction}: $width !important;
      &[style*='transform'] {
        $PN: if($direction== 'left', -1, 1);
        transform: translateX(calc($PN * (100% + $width))) !important;
      }
    }
  }
}

@include float('left');
@include float('right');
