@use '../mixins' as m;
@use 'sass:math';
@use '../component/form-input' as form;

$height: 36px;
$icon-w: 30px;
$interval: math.div($height - $icon-w, 2);

.search {
  &__header {
    box-sizing: border-box;
    height: $height;
    div:has(> &) {
      background-color: var(--rc-background);
      .b3-button {
        @include m.focus(var(--rc-on-surface-variant));
        height: 28px;
        font-size: 12px;
        &[disabled] {
          background-color: transparent;
        }
        &--cancel {
          @include m.transparent();
        }
      }
    }
    .b3-form__icon-icon {
      top: $interval;
      left: $interval !important;
    }
    .b3-text-field {
      font-size: 14px;
      height: $height;
      padding-left: $height;
      background-color: transparent;
    }
    .block__icons {
      min-height: $height;
    }
  }
  &__arrowdown {
    $w: 8px;
    @include m.svg($w);
    top: math.div($height - $w, 2);
    left: $icon-w - $w + $interval + 2px;
  }
  &__layout {
    border: none;
  }
  &__list {
    padding-top: 8px;
    background-color: var(--rc-surface);
  }

  &__preview {
  }

  &__drag {
    &:hover::after {
      background-color: rgba(var(--rc-primary));

      .search__layout--row & {
        width: 2px;
      }
      .search__layout:not(.search__layout--row) & {
        height: 2px;
      }
    }
  }

  &__tip {
    margin: 0;
    height: 36px;
    border-top: 1px solid var(--b3-border-color);
  }
}

#criteria {
  min-height: $height !important;
  border-bottom: 1px solid var(--b3-border-color);
  box-sizing: border-box;

  + .block__icons {
    min-height: $height;
    box-sizing: border-box;
    border-bottom: 1px solid var(--b3-border-color);
  }
}

#searchHistoryList {
  min-width: 150px;
}

.b3-dialog__container {
  .fn__flex-column:has(> .search__header) {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 36px 36px auto 36px;
  }
  .fn__flex-column:not(:has(> .search__header.fn__none)) {
    grid-template-rows: 36px 36px 36px auto 36px;
  }
  .search {
    &__header {
      grid-column: span 2;
    }
    &__layout {
      grid-column: span 2;
      order: 3;
    }
    &__tip {
      grid-column: span 2;
      order: 4;
    }
  }
  #criteria {
    grid-column: span 1;
    order: 2;
    + .block__icons {
      grid-column: span 1;
      order: 1;
      border-right: 1px solid var(--b3-border-color);
    }
  }
}

#searchList > .b3-list-item {
  // 分组
  + div:not([data-type='search-item']) {
    > [data-type='search-item'] {
      height: 32px;
      //padding-left: list.$padding !important;
    }
  }

  // 未分组
  &[data-type='search-item'] {
    $padding: 8px;
    $text-h: 24px;
    height: auto;
    flex-wrap: wrap;
    align-items: start;
    gap: 0;
    padding: $padding $padding 24px + $padding;

    .b3-list-item {
      &__graphic {
        @include m.svg(28px, 12px, $important: true);
      }
      &__text {
        overflow-y: auto !important;
        text-overflow: ellipsis !important;
        -webkit-box-orient: inherit;
        padding: 0 $padding 0 0;
        width: 100% !important;
        flex: 100;
      }
      &__meta {
        position: absolute;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        left: $padding + 0px;
        bottom: $padding;
        margin: 0;
        &--ellipsis {
          left: unset;
          right: $padding;
        }
      }
    }
  }
}
