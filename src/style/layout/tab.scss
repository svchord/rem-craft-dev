@use 'sass:math';
@use '../mixins' as m;

$bar-h: 42px;
$iten-h: 32px;
$item-pad: 8px;
$item-mar: 3px;

$interval: math.div($bar-h - $iten-h, 2);

@mixin icon {
  margin-left: $item-pad;
  + .item__text {
    padding-left: 8px !important;
  }
}

.layout-tab {
  &-bar {
    background-color: transparent;
    border-color: var(--b3-border-color);

    .layout__center [data-type='wnd'] > .fn__flex > & {
      background-color: var(--rc-background);
      height: $bar-h;
      padding: 0 $interval - $item-mar;
      border: none;
      .item {
        box-shadow: unset;
        height: 32px;
        min-height: 0;
        margin: 0 $item-mar;
        overflow: visible;
        border-radius: var(--b3-border-radius);

        &:active {
          transform: scale(0.95);
        }

        &__text {
          padding: 0 8px 0 $item-pad;
          min-width: 60px;
          max-width: 190px;
        }
        &::after {
          content: '';
          display: block;
          position: absolute;
          top: 4px;
          bottom: 4px;
          right: -$item-mar;
          left: unset;
          width: 0;
          height: auto;
          border-right: 1px solid var(--b3-border-color);
        }
        &:has(+ .item--focus)::after {
          border: none;
        }
        &--focus {
          @include m.focus(var(--rc-on-surface-rgb));
          &::after {
            border: none;
          }
        }
      }
    }
    .item {
      @include m.state(var(--rc-on-surface-rgb));
      &__icon {
        padding: 0;
        @include icon();
        > svg,
        > img {
          margin: 0;
        }
      }
      &__graphic {
        @include m.svg(12px);
        @include icon();
      }
      &__close {
        @include m.state(var(--rc-on-surface-rgb));
        @include m.svg-parent(18px, 8px);
        margin-right: 8px;
        border-radius: var(--b3-border-radius);
        svg {
          border-radius: unset;
          background-color: transparent !important;
          opacity: 1 !important;
        }
      }

      &--pin {
        .item {
          &__icon {
            margin: 0;
            padding: 0 16px;
          }
          &__text {
            padding: 0 12px;
          }
        }
      }
      &--full {
        min-width: unset !important;
        flex: unset;
        width: auto;
        padding: 0 16px;
        .item {
          &__text {
            padding: 0 8px;
          }
          &--focus {
            &::after {
              background: var(--rc-primary);
            }
          }
        }

        &::after {
          content: '';
          display: block;
          position: absolute;
          background-color: transparent;
          border-radius: unset;
          width: auto;
          height: 2px;
          bottom: 0;
          left: 18px;
          right: 18px;
          transition: var(--b3-transition);
        }
        &:hover::after {
          left: 0;
          right: 0;
        }
      }
      &--readonly {
        > .fn__flex-1 {
          min-width: 0;
          width: 0;
        }
      }
    }
    &--readonly {
      padding: 0 !important;
      min-width: 24px * 2 + 8px * 2 - $interval;
      .item {
        @include m.transparent();
        margin: $interval 0 0 !important;
        cursor: unset;
        padding: 0 8px 0 8px - $interval;
      }
      [data-type='more'] {
        @include m.svg-parent(24px, 10px);
        margin-left: 4px;
      }
    }
  }
}
