@use '../mixins' as m;

$pad: 12px;

@mixin icon {
  margin-left: $pad;
  + .item__text {
    padding-left: 8px;
  }
}

.layout-tab {
  &-container {
    background-color: transparent;
  }
  &-bar {
    .item {
      @include m.state(var(--rc-on-surface-variant));
      min-height: 41px;
      &__icon {
        padding: 0;
        @include icon();
        > svg,
        > img {
          margin: 0;
        }
      }
      &__graphic {
        @include m.svg(12px);
        @include icon();
      }
      &__text {
        padding: 0 8px 0 $pad;
        box-sizing: border-box;
        min-width: 90px;
        max-width: 190px;
      }
      &__close {
        @include m.state(var(--rc-on-surface-variant));
        @include m.svg-parent(18px, 8px);
        margin-right: 8px;
        border-radius: var(--b3-border-radius);
        svg {
          border-radius: unset;
          background-color: transparent !important;
          opacity: 1 !important;
        }
      }
      &::after {
        content: '';
        display: block;
        position: absolute;
        background-color: transparent;
        height: 2px;
        border-radius: unset;
        bottom: 0;
        left: $pad - 2px;
        right: $pad - 2px;
        width: auto;
        transition: var(--b3-transition);
      }
      &:hover::after {
        left: 0;
        right: 0;
      }
      &--focus {
        box-shadow: unset !important;
        &::after {
          background: rgba(var(--rc-primary));
        }
      }
      &--pin {
        .item {
          &__icon {
            margin: 0;
            padding: 0 16px;
          }
          &__text {
            padding: 0 12px;
          }
        }
      }
      &--full {
        min-width: unset !important;
        flex: unset;
        width: auto;
        $padding: 16px;
        > .fn__flex-1 {
          width: $padding;
        }
        .item {
          &__text {
            padding: 0 8px;
            min-width: 46px;
          }
        }
        &::after {
          $interval: $padding + 8px - 4px;
          left: $interval;
          right: $interval;
        }
      }
    }
    &--readonly {
      .item {
        @include m.transparent();
        cursor: unset;
        padding: 0 8px;
      }
    }
  }
}
